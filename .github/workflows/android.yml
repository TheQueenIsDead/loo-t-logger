name: Build Android

on:
  # Automatically build when developing on the `build/android` branch.
  push:
    branches:
      - build/android
    paths:
      - app/src/*
      - app/public/*
      - .github/workflows/android.yml
  # Else, builds will occur when manually called or triggered by release please.
  workflow_call:
    inputs:
      tag:
        required: true
        type: string
        description: |
          The git tag to use when checking out. Defaults to the main branch. 
          Will attempt to upload APK's to the corresponding GitHub release if provided
  workflow_dispatch:
    inputs:
      tag:
        required: true
        type: string
        description: |
          The git tag to use when checking out. Defaults to the main branch. 
          Will attempt to upload APK's to the corresponding GitHub release if provided

jobs:
  build:
    name: Build APK
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: app/
    steps:

      # If we are not provided with a tag, checkout the default branch
      - if: ${{ inputs.tag == '' }}
        name: Checkout
        uses: actions/checkout@v4

      # Else, checkout the provided tag. Value is given on workflow call or dispatch
      - if: ${{ inputs.tag != '' }}
        name: Checkout
        uses: actions/checkout@v4
        with:
          ref: ${{ inputs.tag }}

      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 17
          cache: gradle

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 21
          cache: npm
          cache-dependency-path: app/package-lock.json

      - name: Install Node Dependencies
        run: npm ci

      - name: Install Ionic CLI
        run: npm install -g @ionic/cli

      - name: Debug Ionic Version
        run: ionic version

      - name: Build Ionic App
        run: ionic build

      - name: Generate Assets
        run: |
          cd assets
          npx capacitor-assets generate
          cd ../
          ionic capacitor build android --release --prod --no-open

      - name: Sync Android
        run: npx cap sync android

      - run: chmod +x ./android/gradlew

      # This creates an .aab (fancy .apk), which can later be signed and used to publish to the play store
      - name: Gradle Bundle
        run: cd android && ./gradlew bundle

      # This generates an .apk file that can only be used as a debug / manual installation candidate.
      - name: Gradle Assemble Debug
        run: cd android && ./gradlew assembleDebug

      - name: Find APK
        run: find . -name '*.apk'

      - name: Rename Debug APK
        run: |
          mv ./android/app/build/outputs/apk/debug/app-debug.apk ./android/app/build/outputs/apk/debug/LootLogger.apk

      - name: Upload APK as Artifact
        uses: actions/upload-artifact@v4
        with:
          name: apk
          path: ./android/app/build/outputs/apk/debug/LootLogger.apk
          if-no-files-found: error

      - if: ${{ inputs.tag != '' }}
        name: Upload APK to GitHub Release
        run: gh release upload ${{ inputs.tag }} ./android/app/build/outputs/apk/debug/LootLogger.apk
